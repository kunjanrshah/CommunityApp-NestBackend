# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  accessToken: String!
  refreshToken: String
  message: String!
}

type UserAddressModel {
  id: Int!
  user_id: Int!
  address: String!
  city_id: Int!
  state_id: Int!
  local_address: String
  mosaad_id: Int
  area: String
  pincode: String
  addr_type: AddrType!
}

"""The type of address (OWN or RENTED)"""
enum AddrType {
  OWN
  RENTED
}

type UserModel {
  id: Int!
  role: Role!
  head_id: Int!
  member_code: String
  email: String
  mobile: String
  password: String!
  relation_id: Int
  sub_community_id: Int
  local_community_id: Int
  first_name: String!
  last_name_id: Int!
  father_name: String
  mother_name: String
  status: Boolean!
  gender: String!
  phone: String
  profile_pic: String!
  region: String
  is_expired: Boolean!
  expire_date: DateTime
  education_id: Int
  occupation_id: Int
  deleted: Boolean!
  login_status: Boolean
  last_login: DateTime
  profile_percent: Float!
  address: UserAddressModel
}

enum Role {
  ADMIN
  USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ChangePasswordResponse {
  message: String!
}

type Query {
  securedResourceforAdmin: String!
  isAppVersionExists(version: Float!): Boolean!
}

type Mutation {
  changePassword(ChangePasswordInput: ChangePasswordInput!): ChangePasswordResponse!
  upsertUser(upsertUserInput: UpsertUserInput!): UserModel!
  updateLastLogin(user_id: Int!): Boolean!
  register(RegisterInput: RegisterInput!): AuthResponse!
  login(LoginInput: LoginInput!): AuthResponse!
  refreshToken(token: String!): AuthResponse!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): String!
  resetPassword(resetPasswordInput: ResetPasswordInput!): String!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input UpsertUserInput {
  user_id: Int
  address_id: Int
  role: Role! = USER
  head_id: Int
  member_code: String
  email: String
  mobile: String
  password: String
  relation_id: Int
  sub_community_id: Int
  local_community_id: Int
  first_name: String
  last_name_id: Int
  father_name: String
  mother_name: String
  status: Boolean! = true
  gender: Boolean
  phone: String
  profile_pic: String! = "noimage.png"
  region: String
  is_expired: Boolean! = false
  expire_date: DateTime
  education_id: Int
  occupation_id: Int
  deleted: Boolean! = false
  login_status: Boolean
  last_login: DateTime
  profile_percent: Int! = 5
  city_id: Int
  state_id: Int
  addr_type: AddrType! = OWN
  address: String
  area: String
  pincode: String
  local_address: String
  mosaad_id: Int
}

input RegisterInput {
  first_name: String!
  last_name_id: Int!
  email: String!
  mobile: String!
  password: String!
  sub_community_id: Int!
  local_community_id: Int!
  gender: Boolean!
  profile_pic: String! = "noimage.png"
  state_id: Int!
  city_id: Int!
  address: String!
}

input LoginInput {
  mobile: String!
  password: String!
}

input ForgotPasswordInput {
  email: String!
}

input ResetPasswordInput {
  token: String!
  password: String!
}